#include <cstdint>
#include <cstdlib>

namespace AE32_768_detail {
static const uint32_t arr[768] = {
    3352,     19,        373,     131490,  993,     227,      1631404,   20830307, 785,     17,      448,      62,
    1113,     174,       272043,  193,     1267,    8106,     2477,      832,      1864,    18142,   758276,   61,
    15254,    83,        20817,   61,      16652,   304,      7390,      487,      25705,   6901,    3963,     187,
    1233549,  268,       409,     770,     15,      37118,    46,        2200,     4026,    55,      2685,     1333,
    84,       25144,     4022,    3801,    902,     5409,     673,       524,      212095,  4273,    415893,   1578,
    2219,     781,       290,     210,     4895,    216790,   751,       15,       436730,  88163,   793,      2070,
    1723,     159251,    1664,    2202,    371,     3856,     1570,      107355,   2953,    1312,    1313,     658,
    1707,     2337,      1649,    1038,    15,      784124,   3429,      3078,     562,     85,      407734,   1845,
    17708,    4478,      98971,   55963,   120,     489,      32098817,  661,      7585,    65,      1038,     56977,
    75864,    559,       445,     74,      625374,  95,       258,       71,       1823,    550,     563,      143323,
    140,      878,       1621,    1115,    298,     1167,     1974,      561,      60944,   10464,   3012,     109411,
    6,        475,       1333,    18241,   213,     716632,   3859684,   10281,    58546,   5727,    139,      11512,
    122,      134,       38812,   52,      281,     1300,     3158,      2387,     850,     540,     327,      232,
    152,      1048,      380,     17,      3180,    3050,     12203,     15760,    510,     29951,   274,      49268,
    678,      22860,     358,     1708,    1261,    290,      235412,    464486,   35,      2517,    1122,     2944,
    2326,     2468,      1022,    464395,  949,     1283,     188,       652,      264383,  7851,    114,      5249,
    2488,     1777,      1146,    591496,  28,      362796,   862,       828,      404,     1008585, 61244,    466,
    2595,     19397,     86,      1375,    935,     1135,     295,       553,      6543,    436,     22,       3050,
    82318,    951,       557,     2589,    35,      69968,    679,       362,      1113489, 31,      27777,    1182473,
    3132,     657,       45902,   1181,    459,     814,      168,       11,       629,     342,     130,      5030,
    33161,    2736,      413,     266,     809,     13110,    1769,      93,       3631,    120716,  62669,    963050,
    17818,    3736,      30173,   56789,   226,     2133,     146,       1311,     19576,   2031,    759,      20367,
    593,      407,       1119332, 2596,    4071,    12772,    166,       415,      378,     1502,    2037416,  3517,
    56,       1519,      9230,    423,     858725,  1550,     816,       1058879,  4003,    15,      413,      3883,
    481822,   956,       2234310, 107047,  157,     1171,     6655,      2537,     36732,   1264,    1480,     157,
    2789,     34,        1272,    1457412, 51867,   669,      997,       7764,     728,     79439,   6989,     213,
    1218,     87,        340,     105,     55726,   4693,     1021,      965,      2021,    1433,    744932,   185,
    1333,     412256,    286,     1552,    6854585, 345353,   80,        4930,     83,      21231,   2543,     124,
    309732,   1046,      44,      1172,    330,     1028,     298,       325,      2585,    271,     368,      311,
    76,       1520,      333,     74,      3407125, 451,      1010,      869,      766,     156,     686,      1850,
    2392,     70,        55394,   38413,   1490,    2923,     3736,      528,      3916,    590,     109,      638,
    1699,     5112,      672,     1069,    703,     544,      546584,    8626,     3420,    99,      63375889, 617,
    358208,   1980,      2652,    3771,    1208,    29459,    560,       88,       131407,  29,      97,       699,
    21,       10,        131,     1002,    9701,    109,      811,       19201,    832,     4104,    86,       12775771,
    15695,    1443,      3772,    389001,  4131,    42827,    210291,    276,      279993,  591,     559,      5,
    100736,   520,       89,      10830,   1226,    263,      1480,      5672,     10840,   307,     327342,   91,
    39645,    353,       85,      186,     23880,   106,      113042810, 4067,     1469,    10717,   664,      1413,
    69387,    221446,    5490,    4828,    120,     58,       1183,      69,       967,     938,     9182,     57058,
    396,      31551,     537,     199,     4034,    16025,    116,       230,      756,     1611,    16214,    2344,
    888,      759,       5134,    344,     1890,    422,      143,       1182,     309560,  1708,    1337,     126408,
    37271,    13298,     2583,    497,     244,     133,      1588,      945,      884,     22774,   374,      326664,
    10366,    1049,      11777,   59,      292,     2912,     123,       44170,    28,      2049,    1212624,  98291,
    774219,   2234,      429,     196863,  231,     734,      124616,    657,      950,     819,     151,      373,
    54404,    239,       249952,  1438,    949,     6979,     403583,    12176,    3010,    1529,    194,      163028,
    344,      40084,     15789,   140,     267,     1704208,  6769,      1530,     524,     244362,  299,      2417,
    65,       5124,      82,      6761,    9993,    2344,     204,       4809,     3402352, 778376,  33611,    56,
    397,      565466992, 3106,    5807,    249,     1343,     3407768,   482647,   155,     899,     2811,     334284,
    126315,   7058,      453,     3084,    484167,  297,      540,       2339,     306,     7322,    3339,     647,
    113,      675,       84,      605,     1191,    4404,     4508,      2721,     3223,    681319,  1688,     425,
    582,      578,       3930,    5,       9803321, 459147,   735027,    212,      3505,    1660,    384,      247,
    11224,    977,       6791,    803,     111,     514471,   1387,      322408,   265,     7994,    696,      61031,
    68,       138,       5894381, 138,     228,     424,      23391,     87368,    26499,   285438,  46,       811,
    749,      110997,    261,     44,      2177,    6577,     510678,    7048,     1319,    2391,    3322,     1758,
    4863,     402,       475707,  542,     286800,  15,       219,       1260,     1298,    1075,    2292,     1206,
    39761,    236,       3216,    113,     2844,    13624428, 205,       659,      2925,    16330,   5244,     1141,
    199066,   540,       1001,    341,     534,     735,      64998,     370059,   14828,   614,     398,      95152,
    49969,    6532,      425,     94514,   71,      944,      96712,     4361,     895,     297153,  103088,   262,
    1199,     62,        888,     760,     218502,  1768,     3,         461,      1498,    3836,    4597,     36079,
    35226,    209618,    1388,    22,      758,     1092,     55292,     369,      223012,  37204,   654,      2360,
    433,      1913,      42104,   4549,    196238,  3348,     5032,      1140,     603,     311119,  405,      27630,
    97,       184,       924876,  2574429, 113184,  20,       113092,    5972,     1230084, 401,     2339,     988,
    213995,   157,       2281,    424,     705,     1077,     656931,    260,      9669,    549,     74272,    1229,
    37855210, 489,       5130,    6167,    129,     1940,     273,       11910,    1229,    721647,  828,      260,
    638,      199306,    1985,    23655,   264,     94,       1626,      5237,     430,     1404,    67825,    110356};

uint16_t hash( uint32_t n ) {
  long long t = n;
  t = ( ( t >> 16 ) ^ t ) * 0xda2e4f1;
  return t % 768;
}

static inline uint64_t powmod( uint64_t a, uint64_t k, uint64_t n ) {
  uint64_t t = 1;
  if( a >= n ) {
    a %= n;
  }
  while( k != 0 ) {
    if( ( k & 1ULL ) != 0 ) {
      t = ( t * a ) % n;
    }
    k >>= 1ULL;
    if( k != 0 ) {
      a = ( a * a ) % n;
    }
  }
  return t;
}

bool prp( uint64_t const n, uint64_t a ) {
  if( a >= n ) {
    a %= n;
    if( a <= 1 ) {
      return ( a == 1 );
    }
    if( a == n - 1 ) {
      return !( a & 1ULL );
    }
  }

  return powmod( a, n - 1, n ) == 1; /* a^(n-1) = 1 mod n */
}

} // namespace AE32_768_detail

bool AE32_768( uint32_t n ) {
  if( n < 11 ) {
    return ( n == 2 || n == 3 || n == 5 || n == 7 ) ? true : false;
  }
  if( !( n % 2 ) || !( n % 3 ) || !( n % 5 ) || !( n % 7 ) ) {
    return false;
  }
  if( n < 121 ) {
    return true;
  }
  if( !( n % 11 ) || !( n % 13 ) || !( n % 17 ) || !( n % 19 ) || !( n % 23 ) || !( n % 29 ) || !( n % 31 )
      || !( n % 37 ) || !( n % 41 ) || !( n % 43 ) || !( n % 47 ) || !( n % 53 ) ) {
    return false;
  }
  if( n < 3481 ) {
    return true;
  }

  uint16_t h = AE32_768_detail::hash( n );
  uint32_t base = AE32_768_detail::arr[h];
  return AE32_768_detail::prp( n, base );
}
/*
#include <cstdio>

int main(){
        uint32_t result = 0;
  for( uint32_t i = 0; i < 10000000; ++i){
          if( AE32_768( i ) ) {
                  ++ result;
  }
  }
  printf("%d\n", result);
}
*/
