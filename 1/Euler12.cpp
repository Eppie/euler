/*
 * =====================================================================================
 *
 *       Filename:  Euler12.cpp
 *
 *    Description:  Solution to Project Euler, Problem 12
 *
 *        Version:  1.1
 *        Created:  07/31/2015 10:58:50 AM
 *       Revision:  none
 *       Compiler:  g++
 *
 *         Author:  Andrew Epstein
 *        Problem:  The sequence of triangle numbers is generated by adding the natural numbers.
 *                  So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
 *                      1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
 *                  Let us list the factors of the first seven triangle numbers:
 *                      1: 1
 *                      3: 1,3
 *                      6: 1,2,3,6
 *                      10: 1,2,5,10
 *                      15: 1,3,5,15
 *                      21: 1,3,7,21
 *                      28: 1,2,4,7,14,28
 *                  We can see that 28 is the first triangle number to have over five divisors.
 *                  What is the value of the first triangle number to have over five hundred divisors?
 *         Answer:  76576500
 * =====================================================================================
 */

#include "../helper.hpp"

namespace euler12 {
int divisors( uint64_t n, int start = 2 ) {
  if( n == 1 ) {
    return 1;
  }

  for( int i = start; i < ceil( sqrt( n ) ) + 1; i++ ) {
    if( n % i == 0 ) {
      int count = 1;

      while( n % i == 0 ) {
        n /= i;
        count += 1;
      }

      return divisors( n, i + 1 ) * count;
    }
  }

  return 2;
}
} // namespace euler12

uint32_t solve12() {
  int count;

  for( int n = 1; n < 20000; n++ ) {
    uint64_t t = n * ( n + 1 ) / 2;

    if( n % 2 == 0 ) {
      count = euler12::divisors( n / 2 ) * euler12::divisors( n + 1 );
    } else {
      count = euler12::divisors( n ) * euler12::divisors( ( n + 1 ) / 2 );
    }

    if( count > 500 ) {
      return t;
    }
  }

  return 0;
}
